@page "/"
@page "/Sites"
@using DataAccessLibrary
@using DataAccessLibrary.Models
@inject NavigationManager NavigationManager
@inject SiteService _siteService
@inject StateService _stateService



<h1>Sites</h1>
<RadzenButton Icon="add_circle_outline" style="margin-bottom: 10px" Text="New Site" Click="@InsertRow" Disabled=@(siteToInsert != null) />
<RadzenDataGrid @ref="sitesGrid" AllowFiltering="true" AllowPaging="true" PageSize="15" AllowSorting="true" EditMode="DataGridEditMode.Single"
                Data="@sites" TItem="Site" RowUpdate="@OnUpdateRow" RowCreate="@OnCreateRow">
    <Columns>
        <RadzenDataGridColumn TItem="Site" Property="NAME" Title="NAME" SortProperty="NAME">
            <EditTemplate Context="site">
                <RadzenTextBox @bind-Value="site.NAME" Data="@sites" TextProperty="SiteName" ValueProperty="NAME" Style="width:100%; display: block;" />
            </EditTemplate>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="Site" Property="address" Title="ADDRESS">
            <EditTemplate Context="site">
            <RadzenTextBox @bind-Value="site.address" Data="@sites" TextProperty="SiteAddress" ValueProperty="Address" Style="width:100%; display: block;" />
            </EditTemplate>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="Site" Property="city" Title="CITY">
            <EditTemplate Context="site">
                <RadzenTextBox @bind-Value="site.city" Data="@sites" TextProperty="SiteCity" ValueProperty="City" Style="width:100%; display: block;" />
            </EditTemplate>
        </RadzenDataGridColumn>
                
        <RadzenDataGridColumn TItem="Site" Property="state" Title="STATE">
            <EditTemplate Context="site">
                <RadzenDropDown @bind-Value="site.state_key" AllowClear="true" Class="w-100" AllowFiltering="true" Data=@states TextProperty="abbreviation" ValueProperty="site.state_key" />
            </EditTemplate>
        </RadzenDataGridColumn>
                
        <RadzenDataGridColumn TItem="Site" Property="zip" Title="ZIP">
            <EditTemplate Context="site">
                <RadzenTextBox  @bind-Value="site.zip" Data="@sites" TextProperty="SiteZip" ValueProperty="Zip" Style="width:100%; display: block;" />
            </EditTemplate>
        </RadzenDataGridColumn>

        <RadzenDataGridColumn TItem="Site" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="200px">
            <Template Context="site">
                <RadzenButton Icon="edit" ButtonStyle="ButtonStyle.Light" Class="m-1" Click="@(args => EditRow(site))" @onclick:stopPropagation="true"></RadzenButton>
                <RadzenButton Icon="apartment" ButtonStyle="ButtonStyle.Light" Click="@(args => GoToBuildings(site.site_key))"></RadzenButton>
                <RadzenButton ButtonStyle="ButtonStyle.Danger" Icon="delete" Size="ButtonSize.Small" Class="m-1" Click="@(args => DeleteRow(site))"  @onclick:stopPropagation="true"></RadzenButton>           
            </Template>
            <EditTemplate Context="site">
                <RadzenButton Icon="check" ButtonStyle="ButtonStyle.Primary" Class="m-1" Click="@((args) => SaveRow(site))">
                </RadzenButton>
                <RadzenButton Icon="close" ButtonStyle="ButtonStyle.Light" Class="m-1" Click="@((args) => CancelEdit(site))">
                </RadzenButton>
            </EditTemplate>
        </RadzenDataGridColumn>

    </Columns>
</RadzenDataGrid>

@code {
    RadzenDataGrid<Site> sitesGrid;
    IList<Site> sites;
    IList<State> states;
    Site siteToInsert;
    [Parameter]
    public int param { get; set; }

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();

        sites = await _siteService.GetSites();
        states = await _stateService.GetStates();
    }

    //creates a new blank row in UI grid bound to new object of type Site; not sure if this fires the radzen rowcreate method which we have set to call the OnCreateRow method below
    async Task InsertRow()
    {
        siteToInsert = new Site();
        await sitesGrid.InsertRow(siteToInsert);
    }

    //somehow this gets fired only when clicking save (checkmark symbol on ui) for a new row. not sure what actually calls this
    void OnCreateRow(Site site)
    {
        _siteService.InsertSite(site);
    }

    //fires when save (checkmark symbol on ui) is clicked but now idea how this gets to OnCreateRow as this only calls UpdateRow which calls updatesite
    async Task SaveRow(Site site)
    {
        if (site == siteToInsert)
        {
            siteToInsert = null;
        }

        await sitesGrid.UpdateRow(site);
    }

    async Task EditRow(Site site)
    {
        await sitesGrid.EditRow(site);
    }

    void OnUpdateRow(Site site)
    {
        if (site == siteToInsert)
        {
            siteToInsert = null;
        }

        _siteService.UpdateSite(site);

    }

    void CancelEdit(Site site)
    {
        if (site == siteToInsert)
        {
            siteToInsert = null;
        }

        sitesGrid.CancelEditRow(site);

    }

    async Task DeleteRow(Site site)
    {
        if (site == siteToInsert)
        {
            siteToInsert = null;
        }

        if (sites.Contains(site))
        {
            _siteService.DeleteSite(site); 

            await sitesGrid.Reload();
        }
        else
        {
            sitesGrid.CancelEditRow(site);
        }
    }
     
    void GoToBuildings(int site_key)      
    {    
        NavigationManager.NavigateTo("/Buildings/" + site_key);      
    }

}